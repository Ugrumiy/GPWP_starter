// version 1.0.1
//http://codepen.io/kodix/pen/aBKqvZ

// ======================================
// Settings
// ======================================
$grid-map: (
  default: (
    class-prefix: '',
  // no media
    min-width: null,
    max-width: null,
    container: 100%,
    columns: 12,
    gap: 20px
  ),
  medium: (
    class-prefix: 'm_',
  // media settings - less than 769px
    min-width: null,
    max-width: 768px,
    container: 100%,
    columns: 6,
  // Attention!
  //Percentage counts from .gridcontainer width
    gap: 5%
  ),
  small: (
    class-prefix: 's_',
  // media settings - less than 481px
    min-width: null,
    max-width: 480px,
    container: 100%,
  // sudden columns
    columns: 5,
  // If gap is odd in px, we'll add 1px violently.
  // So don't mess with us, make even px gaps.
    gap: 5px
  )
);



// ======================================
// Grid function
// ======================================
@mixin make-grid($map) {

  // ======================================
  // Grid settings
  // ======================================
  $prefix: map-get($map, class-prefix);
  $min-width: map-get($map, min-width);
  $max-width: map-get($map, max-width);
  $container: map-get($map, container);
  $columns: map-get($map, columns);
  $gap: 0px;

  @if map-get($map, gap) % 2 == 0 or unit(map-get($map, gap)) != 'px' {
    $gap: map-get($map, gap);
  } @else {
    $gap: map-get($map, gap) + 1;
  }

  $column_width: $container/$columns;

  // ======================================
  // Container
  // ======================================
  .gridcontainer
  {
    width: if($container == 100% , auto , $container);
    margin-left:-$gap/2 !important;
    margin-right:-$gap/2 !important;
  }

  // ======================================
  // Grid
  // ======================================
  [class*="grid_"] {
    display: inline;
    float: left;
    padding-left: $gap/2;
    padding-right: $gap/2;
  }


  @for $i from 1 through $columns {
    .#{$prefix}grid_#{$i} { width: $column_width * $i }
  }
  @for $i from 1 to $columns {
    .#{$prefix}prefix_#{$i} { margin-left: $column_width * $i }
  }
  @for $i from 1 to $columns {
    .#{$prefix}suffix_#{$i} { margin-right: $column_width * $i }
  }
  @for $i from 1 to $columns {
    .#{$prefix}push_#{$i} { left: $column_width * $i  }
  }
  @for $i from 1 to $columns {
    .#{$prefix}pull_#{$i} { left: - ($column_width * $i ) }
  }


  .#{$prefix}prefix_0 {margin-left: 0;}
  .#{$prefix}suffix_0 {margin-right: 0;}
  .#{$prefix}push_0 	{left: 0;}
  .#{$prefix}pull_0 	{left: 0;}

  // ======================================
  // Reset grid option
  // ======================================
  .#{$prefix}nogrid {
    left: auto;
    right: auto;
    display: block;
    float: none;
    width: auto;
    margin: 0;
    // No padding reset! Container has negative margin still.
    // padding: 0;
  }
}

// ======================================
// Clear floated elements
// ======================================
.gridcontainer:before,
.gridcontainer:after {
  content: ' ';
  display: table;
  clear: both;
}
// ======================================
// Default grid styles
// ======================================
.gridcontainer {
  position: relative;
}
[class*="grid_"] {
  position:relative;
  min-height: 1px;
  box-sizing:border-box;
}


// ======================================
// Big bada loop
// ======================================
@each $label, $map in $grid-map {

  $min-width:  map-get($map, min-width);
  $max-width:  map-get($map, max-width);
  $min-width-str:  if($min-width == null, '', ' and (min-width: #{$min-width}) ');
  $max-width-str:  if($max-width == null, '', ' and (max-width: #{$max-width}) ');
  $media-str: 'only screen' + $min-width-str + $max-width-str;

  @if $min-width or $max-width {
    // make responsive grid
    @media #{$media-str} {
      @include make-grid($map); // One grid, please
    }
  } @else {
    // make default grid
    @include make-grid($map); // One grid, please
  }
}
// ======================================
// ======================================
// ======================================